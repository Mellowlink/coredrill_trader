#:import utils kivy.utils
<DashboardLayout>
  #TODO: Add borders around sections: #0B0E11

    connection_status:connection_status
    connection_switch:connection_switch

    balance_full:balance_full
    balance_available:balance_available

    asset_price:asset_price
    margin_ratio:margin_ratio

    amount_small:amount_small
    amount_medium:amount_medium
    amount_large:amount_large

    long_btn:long_btn
    short_btn:short_btn

    pending_tx_size:pending_tx_size
    pending_tx_margin:pending_tx_margin

    clear_btn:clear_btn

    execute_btn:execute_btn

    pos_size:pos_size
    entry_price:entry_price
    liq_price:liq_price
    pos_margin:pos_margin
    pos_pnl:pos_pnl
    close_pos_btn:close_pos_btn

    GridLayout:
        cols: 1
        size: root.width, root.height

        # TODO: refactor GridLayouts with empty cols into appropriate Layout widgets

        # main background color
        canvas.before:
            Color:
                rgba: utils.get_color_from_hex('#181A20')
            Rectangle:
                pos: self.pos
                size: self.size
        GridLayout:
            cols: 7
            row_force_default: True
            row_default_height: 20

            #background color
            canvas.before:
                Color:
                    rgba: utils.get_color_from_hex('#1E2026')
                Rectangle:
                    pos: self.pos
                    size: self.size

            #TODO: Get rid of weird empty labels being used to balance the GridLayout
            Label:
                text: ""
            Label:
                text: ""
            Label:
                text: ""
            Label:
                id: connection_status
                text: "Connect"
                text_size: self.size
                halign: 'center'
                valign: 'top'
                font_size: 10
                color: utils.get_color_from_hex('#999999')
            Label:
                text: ""
            Label:
                text: "Balance:" if self.width > 100 else ""
                text_size: self.size
                halign: 'right' if self.width > 100 else 'left'
                font_size: 14 if self.width > 100 else 12
                color: utils.get_color_from_hex('#999999')
            Label:
                id: balance_full
                text: "-"
                text_size: self.size
                halign: 'right'
                font_size: 14 if self.width > 100 else 12
            Label:
                text: ""
            # FloatLayout:
            #     MDIconButton:
            #         icon: "menu"
            #         pos_hint: {"center_x": 0.3, "center_y": 1}
            #         theme_text_color: "Custom"
            #         text_color: (utils.get_color_from_hex('#999999'))
            Label:
                text: ""
            Label:
                text: ""
            FloatLayout:
                MDSwitch:
                    id: connection_switch
                    size_hint: (None, 1)
                    pos_hint: {'center_x': .475, 'center_y': .5}
                    width: 50
                    theme_thumb_color: 'Custom'
                    theme_thumb_down_color: 'Custom'
                    thumb_color: utils.get_color_from_hex('#999999')
                    thumb_color_down: utils.get_color_from_hex('#0ecb81')
                    on_active: app.connect_exchange(self)
                    always_release: False
            Label:
                text: ""
            Label:
                text: "Available:" if self.width > 100 else ""
                text_size: self.size
                halign: 'right' if self.width > 100 else 'left'
                font_size: 14 if self.width > 100 else 12
                color: utils.get_color_from_hex('#999999')
            Label:
                id: balance_available
                text: "-"
                text_size: self.size
                halign: 'right'
                font_size: 14 if self.width > 100 else 12
                color: utils.get_color_from_hex('#999999')
        GridLayout:
            cols: 2
            row_force_default: True
            row_default_height: 60
            size_hint_y: None
            height: self.minimum_height
            padding: -40

            #background color
            canvas.before:
                Color:
                    rgba: utils.get_color_from_hex('#1E2026')
                Rectangle:
                    pos: self.pos
                    size: self.size
            Label:
                text: "ETH/USDT"
                text_size: self.size
                halign: 'center'
                valign: 'center'
                font_size: 18
                size_hint_x: 0.65
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#181A20')
                    Rectangle:
                        pos: self.pos
                        size: self.size
            Label:
                text: "Margin Ratio"
                text_size: self.size
                halign: 'center'
                valign: 'center'
                font_size: 16
                size_hint_x: 0.35
            Label:
                id: asset_price
                text: "-"
                text_size: self.size
                halign: 'center'
                valign: 'center'
                font_size: 36
                size_hint_x: 0.65
                color: utils.get_color_from_hex('#ffffff')
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#181A20')
                    Rectangle:
                        pos: self.pos
                        size: self.size
            Label:
                id: margin_ratio
                text: "-"
                text_size: self.size
                halign: 'center'
                valign: 'center'
                font_size: 24
                size_hint_x: 0.35
                color: utils.get_color_from_hex('#0ecb81')
            Label:
                text: ""
                size_hint_x: 0.65
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#181A20')
                    Rectangle:
                        pos: self.pos
                        size: self.size
            Label:
                text: ""
                size_hint_x: 0.35

        GridLayout:
            cols: 9
            row_force_default: True
            row_default_height: 50
            padding: 25
            # size_hint_y: None

            #background color
            canvas.before:
                Color:
                    rgba: utils.get_color_from_hex('#1E2026')
                Rectangle:
                    pos: self.pos
                    size: self.size

            #TODO: Get rid of weird empty labels being used to balance the GridLayout
            Label:
                text: ""
            Label:
                text: ""
            ToggleButton:
                id: amount_small
                text: "5%"
                group: "tx_amount"
                font_size: 28 if self.state == 'down' else 16
                color: (1,1,1,1) if self.state == 'down' else utils.get_color_from_hex('#f0b600')
                background_normal: ''
                background_down: ''
                background_color: utils.get_color_from_hex('#473601') if self.state == 'down' else (0,0,0,0)
                always_release: True
                disabled: True
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#f0b600') if self.disabled == False else (0,0,0,0)
                    Line:
                        width: 0.5
                        rectangle: self.x, self.y, self.width, self.height
                on_press: app.change_tx_amount(self, 0.05)
                on_release: setattr(self, 'state', 'down')
            Label:
                text: ""
            ToggleButton:
                id: amount_medium
                text: "10%"
                group: "tx_amount"
                font_size: 28 if self.state == 'down' else 16
                color: (1,1,1,1) if self.state == 'down' else utils.get_color_from_hex('#f0b600')
                background_normal: ''
                background_down: ''
                background_color: utils.get_color_from_hex('#473601') if self.state == 'down' else (0,0,0,0)
                always_release: True
                disabled: True
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#f0b600') if self.disabled == False else (0,0,0,0)
                    Line:
                        width: 0.5
                        rectangle: self.x, self.y, self.width, self.height
                on_press: app.change_tx_amount(self, 0.10)
                on_release: setattr(self, 'state', 'down')
            Label:
                text: ""
            ToggleButton:
                id: amount_large
                text: "15%"
                group: "tx_amount"
                font_size: 28 if self.state == 'down' else 16
                color: (1,1,1,1) if self.state == 'down' else utils.get_color_from_hex('#f0b600')
                background_normal: ''
                background_down: ''
                background_color: utils.get_color_from_hex('#473601') if self.state == 'down' else (0,0,0,0)
                always_release: True
                disabled: True
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#f0b600') if self.disabled == False else (0,0,0,0)
                    Line:
                        width: 0.5
                        rectangle: self.x, self.y, self.width, self.height
                on_press: app.change_tx_amount(self, 0.15)
                on_release: setattr(self, 'state', 'down')
            Label:
                text: ""
            Label:
                text: ""
        GridLayout:
            cols: 7
            row_force_default: True
            row_default_height: 50
            padding: 20

            #background color
            canvas.before:
                Color:
                    rgba: utils.get_color_from_hex('#1E2026')
                Rectangle:
                    pos: self.pos
                    size: self.size

            #TODO: Get rid of weird empty labels being used to balance the GridLayout
            Label:
                text: ""
            Label:
                text: ""
            ToggleButton:
                id: long_btn
                text: "Buy/Long"
                group: "tx_direction"
                font_size: 16 if self.width > 80 else 12
                color: (1,1,1,1) if self.state == 'down' else utils.get_color_from_hex('#0ecb81')
                background_normal: ''
                background_down: ''
                background_color: utils.get_color_from_hex('#0ecb81') if self.state == 'down' else (0,0,0,0)
                always_release: True
                disabled: True
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#0ecb81') if self.disabled == False else (0,0,0,0)
                    Line:
                        width: 0.5
                        rectangle: self.x, self.y, self.width, self.height
                on_press: app.change_tx_direction(self, 1)
                on_release: setattr(self, 'state', 'down')
            Label:
                text: ""
            ToggleButton:
                id: short_btn
                text: "Sell/Short"
                group: "tx_direction"
                font_size: 16 if self.width > 80 else 12
                color: (1,1,1,1) if self.state == 'down' else utils.get_color_from_hex('#f6465d')
                background_normal: ''
                background_down: ''
                background_color: utils.get_color_from_hex('#f6465d') if self.state == 'down' else (0,0,0,0)
                always_release: True
                disabled: True
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#f6465d') if self.disabled == False else (0,0,0,0)
                    Line:
                        width: 0.5
                        rectangle: self.x, self.y, self.width, self.height
                on_press: app.change_tx_direction(self, -1)
                on_release: setattr(self, 'state', 'down')
            Label:
                text: ""
            Label:
                text: ""
        GridLayout:
            cols: 6
            row_force_default: True
            row_default_height: 30
            padding: 20

            #background color
            canvas.before:
                Color:
                    rgba: utils.get_color_from_hex('#1E2026')
                Rectangle:
                    pos: self.pos
                    size: self.size

            #TODO: Get rid of weird empty labels being used to balance the GridLayout
            Label:
                text: ""
                size_hint_x: 0.125
            Label:
                text: ""
                size_hint_x: 0.125
            Label:
                text: "Size"
                font_size: 16 if self.width > 150 else 12
                size_hint_x: 0.25
                color: utils.get_color_from_hex('#999999')
            Label:
                text: "Margin"
                font_size: 16 if self.width > 150 else 12
                size_hint_x: 0.25
                color: utils.get_color_from_hex('#999999')
            Label:
                text: ""
                size_hint_x: 0.125
            Label:
                text: ""
                size_hint_x: 0.125
            Label:
                text: ""
                size_hint_x: 0.125
            Label:
                text: ""
                size_hint_x: 0.125
            Label:
                id: pending_tx_size
                text: "-"
                font_size: 18 if self.width > 150 else 14
                size_hint_x: 0.25
            Label:
                id: pending_tx_margin
                text: "-"
                font_size: 18 if self.width > 150 else 14
                size_hint_x: 0.25
            Label:
                text: ""
                size_hint_x: 0.125
            Button:
                id: clear_btn
                text: "Clear"
                font_size: 14
                size_hint_x: 0.125
                color: utils.get_color_from_hex('#ffffff')
                background_normal: ''
                background_down: ''
                background_color: utils.get_color_from_hex('#4E4E4E') if self.state == 'down' else (0,0,0,0)
                disabled: True
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#ffffff') if self.disabled == False else (0,0,0,0)
                    Line:
                        width: 0.5
                        rectangle: self.x, self.y, self.width, self.height
                on_release: app.clear_pressed()

        GridLayout:
            cols: 7
            row_force_default: True
            row_default_height: 50
            padding: 20

            #background color
            canvas.before:
                Color:
                    rgba: utils.get_color_from_hex('#1E2026')
                Rectangle:
                    pos: self.pos
                    size: self.size
            Label:
                text: ""
            Label:
                text: ""
            Label:
                text: ""
            Button:
                id: execute_btn
                text: "Execute"
                font_size: 16
                disabled: True
                on_release: app.execute_pressed()
            Label:
                text: ""
            Label:
                text: ""
            Label:
                text: ""

        GridLayout:
            cols: 6
            row_force_default: True
            row_default_height: 30
            padding: 10

            #background color
            canvas.before:
                Color:
                    rgba: utils.get_color_from_hex('#181A20')
                Rectangle:
                    pos: self.pos
                    size: self.size
            Label:
                text: "Size"
                font_size: 14
                color: utils.get_color_from_hex('#999999')
            Label:
                text: "Entry Price"
                font_size: 14
                color: utils.get_color_from_hex('#999999')
            Label:
                text: "Liq. Price"
                font_size: 14
                color: utils.get_color_from_hex('#999999')
            Label:
                text: "Margin"
                font_size: 14
                color: utils.get_color_from_hex('#999999')
            Label:
                text: "PNL(ROE %)"
                font_size: 14
                color: utils.get_color_from_hex('#999999')
            #TODO: Get rid of this empty label
            Label:
                text: ""
                font_size: 14
            Label:
                id: pos_size
                font_size: 14
            Label:
                id: entry_price
                font_size: 14
            Label:
                id: liq_price
                color: utils.get_color_from_hex('#f0b600')
                font_size: 14
            Label:
                id: pos_margin
                font_size: 14
            Label:
                id: pos_pnl
                font_size: 14
            Button:
                id: close_pos_btn
                text: "Close" if self.disabled == False else ""
                font_size: 14
                color: utils.get_color_from_hex('#f0b600')
                background_normal: ''
                background_down: ''
                background_color: utils.get_color_from_hex('#473601') if self.state == 'down' else (0,0,0,0)
                disabled: True
                canvas.before:
                    Color:
                        rgba: utils.get_color_from_hex('#f0b600') if self.disabled == False else (0,0,0,0)
                    Line:
                        width: 0.5
                        rectangle: self.x, self.y, self.width, self.height
                on_release: root.close_position()
</DashboardLayout>
<PromptCreds>
    prompt_creds_key:prompt_creds_key
    prompt_creds_secret:prompt_creds_secret

    orientation: "vertical"
    spacing: "12dp"
    size_hint_y: None
    height: "120dp"

    MDTextField:
        id: prompt_creds_key
        hint_text: "Key"
        helper_text_mode: "on_error"
        helper_text: "Something's wrong, doublecheck your entry"
        max_text_length: 64
        mode: "rectangle"
        color_mode: 'custom'
        line_color_focus: utils.get_color_from_hex('#ffffff')
        error_color: utils.get_color_from_hex('#f6465d')


    MDTextField:
        id: prompt_creds_secret
        hint_text: "Secret"
        helper_text_mode: "on_error"
        helper_text: "Something's wrong, doublecheck your entry"
        max_text_length: 64
        mode: "rectangle"
        color_mode: 'custom'
        line_color_focus: utils.get_color_from_hex('#ffffff')
        error_color: utils.get_color_from_hex('#f6465d')

</PromptCreds>
